{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","React","useState","fName","fNameSet","lName","lNameSet","address","addressSet","phone","phoneSet","email","emailSet","dough","doughSet","size","sizeSet","handleDough","event","currentTarget","value","handleSize","doughPrice","sizePrice","numOfToppings","subtotal","totalGst","totalPst","total","className","to","id","for","type","placeholder","onChange","match","name","checked","onClick","readOnly","toFixed","Menu","About","Contact","Error404","Boolean","window","location","hostname","ReactDOM","render","basename","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58ce895f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default function App() {\n\n  return (\n    //Creating Routes to use paths for linking the different pages of the site. \n    <Router basename='https://isaak-pixel.github.io/'>\n      <header>\n      {/*The header that will appear at the top of all pages, \n      it has 2 colours.*/}\n        <h1>&#127829; <span className=\"heading\">Pretty</span> <span className=\"heading\">Popular </span>\n        <span className=\"heading\">Pizza</span> <span className=\"heading\">Place</span> &#127829;</h1>\n      </header>\n\n      <div>\n        <Switch>\n          {/*Creating the home/index page*/}\n          <Route exact path=\"/\">\n            <Home />  \n          </Route>\n\n          {/*Creating Menu page*/}\n          <Route path=\"/menu\">\n            <Menu />\n          </Route>\n\n          {/*Creating About page*/}\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          {/*Creating Contact page*/}\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n\n          {/*Creating an 'if else' (or at least similar to it) to give user a error page\n          if they entered a url other than the ones above*/}\n          <Route path=\"/*\">\n            <Error404 />\n          </Route>\n        </Switch>\n      </div>\n\n      {/*This footer will appear on all pages*/}\n      <footer>&copy;Isaak Dyck. Code made for the ComIT React course!</footer>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\" in your app.\n\n\n//Code for the 'Home'/index page and what will appear on it. The main form will also appear here\nfunction Home() {\n\n  let [fName, fNameSet] = React.useState(\"\");\n  let [lName, lNameSet] = React.useState(\"\");\n  let [address, addressSet] = React.useState(\"\");\n  let [phone, phoneSet] = React.useState(\"\");\n  let [email, emailSet] = React.useState(\"\");\n  let [dough, doughSet] = React.useState(\"\");\n  let [size, sizeSet] = React.useState(\"\");\n\n\n  function handlefName(event) {\n    fNameSet(event.currentTarget.value);\n  }\n\n  function handlelName(event) {\n    lNameSet(event.currentTarget.value);\n  }\n\n  function handleAddress(event) {\n    addressSet(event.currentTarget.value);\n  }\n\n  function handlePhone(event) {\n    phoneSet(event.currentTarget.value);\n  }\n\n  function handleEmail(event) {\n    emailSet(event.currentTarget.value);\n  }\n\n  function handleDough(event) {\n    doughSet(event.currentTarget.value);\n  }\n\n  function handleSize(event) {\n    sizeSet(event.currentTarget.value);\n  }\n\n  const gst = 0.05; //5% GST\n  const pst = 0.06; //6% PST\n\n  let doughPrice = 0;\n  let sizePrice = 0;\n\n  let deliveryFee = 3;\n\n\n  let phoneReg = /[0-9]{3}-[0-9]{3}-[0-9]{4}/;\n\n  switch (size) {\n    case \"7\":\n      sizePrice = 7;\n      break;\n      case \"9\":\n      sizePrice = 9;\n      break;\n      case \"11\":\n      sizePrice = 11;\n      break;\n      case \"13\":\n      sizePrice = 13;\n      break;\n    default:\n      sizePrice = 0;\n  }\n\n  switch (dough) {\n    case \"1\":\n    case \"2\":\n    case \"3\":\n      doughPrice = 0;\n      break;\n    case \"4\": \n      doughPrice = 1;\n      break;\n    default:\n      doughPrice = 0;\n  }\n  let numOfToppings = 0;\n\n  function toppingCalc() {\n    numOfToppings = (document.querySelectorAll('input[type=\"checkbox\"]:checked').length);\n  }\n  \n  let toppingsSub = numOfToppings * 0.50;\n  let subtotal = doughPrice + sizePrice + numOfToppings + deliveryFee;\n\n  let totalGst = (subtotal * gst);\n  let totalPst = (subtotal * pst);\n\n  let total = subtotal + totalGst + totalPst;\n\n  return (\n    <div className=\"header\">\n      <nav>\n        <Link to=\"/\">Home</Link>&nbsp;|&nbsp;<Link to=\"/menu\">Menu</Link>&nbsp;|&nbsp;\n        <Link to=\"/about\">About</Link>&nbsp;|&nbsp;<Link to=\"/contact\">Contact</Link> \n      </nav>\n\n      <h2 className=\"pageTitle\"><span className=\"firstLetter\">W</span>elcome to Pretty Popular Pizza Place! &#127829;</h2>\n\n      <h3 className=\"formTitle\"><span className=\"firstLetter\">W</span>ant to order a pizza? Take a look at our\n      menu and give us a call! Or fill out the form below and we will send you an email to confirm your order.</h3>\n\n      <h3 className = \"formTitle\"><span className=\"firstLetter\">P</span>lease note there is an added $3.00 delivery fee to every order.</h3>\n\n      <form>\n        <p id=\"fNameClass\"><label for=\"fName\">First Name:</label> \n        <input type=\"text\" className=\"fNameID\" id=\"fNameID\" placeholder=\"First Name\" onChange={handlefName} value={fName} />\n        {fName.match(/[a-zA-Z]/) == null  && <strong><span className=\"errorMessage\"> -- Error, invalid first name entered</span></strong>}</p>\n\n        <p id=\"lNameClass\"><label for=\"lName\">Last Name:</label> \n        <input type=\"text\" className=\"lNameID\" id=\"lNameID\" placeholder=\"Last Name\" onChange={handlelName} value={lName} />\n        {lName.match(/[a-zA-Z]/) == null && <strong><span className=\"errorMessage\"> -- Error, invalid last name entered</span></strong>}</p>\n\n        <p id=\"addressClass\"><label for=\"addressID\">Delivery Address:</label> \n        <input type=\"text\" className=\"addressID\" id=\"addressID\" placeholder=\"Address\" onChange={handleAddress} value={address} />\n        {address == \"\" && <strong><span className=\"errorMessage\"> -- Error, no address entered</span></strong>}</p>\n\n        <p id=\"phoneClass\"><label for=\"phoneID\">Phone Number:</label> \n        <input type=\"text\" className=\"phoneID\" id=\"phoneID\" placeholder=\"Phone\" onChange={handlePhone} value={phone} />\n        {phone.match(/[0-9]{3}-[0-9]{3}-[0-9]{4}/) == null && <strong><span className=\"errorMessage\"> -- Error, invalid phone number</span></strong>}</p>\n\n        <p id=\"emailClass\"><label for=\"emailID\">Email Address:</label> \n        <input type=\"text\" className=\"emailID\" id=\"emailID\" placeholder=\"Email\" onChange={handleEmail} value={email}/>\n        {email.match(/\\S+@\\S+\\.\\S+/) == null && <strong><span className=\"errorMessage\"> -- Error, invalid email</span></strong>}</p>\n\n        <p id=\"sizeClass\"><label for=\"pizzaSize\"><span className=\"firstLetter\">S</span>elect your pizza size</label></p>\n        <p><input type=\"radio\" name=\"size\" id=\"sizeS\" value=\"7\" checked={size === \"7\"} onChange={handleSize} /> Small (9\") ...... $7.00</p>\n        <p><input type=\"radio\" name=\"size\" id=\"sizeM\" value=\"9\" checked={size === \"9\"} onChange={handleSize} /> Medium (\"12\") ...... $9.00</p>\n        <p><input type=\"radio\" name=\"szie\" id=\"sizeL\" value=\"11\" checked={size === \"11\"} onChange={handleSize} /> Large (15\") ...... $11.00</p>\n        <p><input type=\"radio\" name=\"size\" id=\"sizeXL\" value=\"13\" checked={size === \"13\"} onChange={handleSize} /> X-Large (18\") ...... $13.00</p>\n\n        <p id=\"doughClass\"><label for=\"doughType\"><span className=\"firstLetter\">S</span>elect the type of dough you want</label></p>\n        <p><input type=\"radio\" name=\"dough\" id=\"dough1\" value=\"1\" checked={dough === \"1\"} onChange={handleDough} /> Original</p>\n        <p><input type=\"radio\" name=\"dough\" id=\"dough2\" value=\"2\" checked={dough === \"2\"} onChange={handleDough} /> Whole Wheat</p>\n        <p><input type=\"radio\" name=\"dough\" id=\"dough3\" value=\"3\" checked={dough === \"3\"} onChange={handleDough} /> Rye</p>\n        <p><input type=\"radio\" name=\"dough\" id=\"dough4\" value=\"4\" checked={dough === \"4\"} onChange={handleDough} /> Gluten Free ...... $1.00 Extra</p>\n\n        <div id=\"toppingClass\">\n          <label for=\"toppingsList\"><span className=\"firstLetter\">S</span>elect your toppings that you want ($0.50 each)</label>\n          Pepperoni<input type=\"checkbox\" name=\"topping1\" id=\"topping1\" />\n          &nbsp;&nbsp;&nbsp; Extra Mozzerella Cheese<input type=\"checkbox\" name=\"topping2\" id=\"topping2\" />\n          &nbsp;&nbsp;&nbsp; Cheddar Cheese<input type=\"checkbox\" name=\"topping3\" id=\"topping3\" onClick=\"toppingCalc()\"/>\n          &nbsp;&nbsp;&nbsp; Feta Cheese<input type=\"checkbox\" name=\"topping4\" id=\"topping4\" onClick=\"toppingCalc()\" />\n          &nbsp;&nbsp;&nbsp; Onions<input type=\"checkbox\" name=\"topping5\" id=\"topping5\" onClick=\"toppingCalc()\" />\n          &nbsp;&nbsp;&nbsp; Sausages<input type=\"checkbox\" name=\"topping6\" id=\"topping6\" onClick=\"toppingCalc()\" />\n          &nbsp;&nbsp;&nbsp; Ground Beef<input type=\"checkbox\" name=\"topping7\" id=\"topping7\" />\n          &nbsp;&nbsp;&nbsp; Bacon<input type=\"checkbox\" name=\"topping8\" id=\"topping8\" />\n          &nbsp;&nbsp;&nbsp; Peppers<input type=\"checkbox\" name=\"topping9\" id=\"topping9\" />\n          &nbsp;&nbsp;&nbsp; Mushrooms<input type=\"checkbox\" name=\"topping10\" id=\"topping10\" />\n          &nbsp;&nbsp;&nbsp; Olives<input type=\"checkbox\" name=\"topping11\" id=\"topping11\" />\n          &nbsp;&nbsp;&nbsp; Pineapples<input type=\"checkbox\" name=\"topping12\" id=\"topping12\" />\n          &nbsp;&nbsp;&nbsp; Ham<input type=\"checkbox\" name=\"topping13\" id=\"topping13\" />\n          &nbsp;&nbsp;&nbsp; Chicken<input type=\"checkbox\" name=\"topping14\" id=\"topping14\" />\n          &nbsp;&nbsp;&nbsp; Basil<input type=\"checkbox\" name=\"topping15\" id=\"topping15\" />\n          &nbsp;&nbsp;&nbsp; Kale<input type=\"checkbox\" name=\"topping16\" id=\"topping16\" />\n          &nbsp;&nbsp;&nbsp; Anchovies<input type=\"checkbox\" name=\"topping17\" id=\"topping17\" />\n          &nbsp;&nbsp;&nbsp; Tomatoes<input type=\"checkbox\" name=\"topping18\" id=\"topping18\" />\n        </div>\n\n        <p><label>Subtotal: </label><input type=\"text\" name=\"tSubtotal\" id=\"tSubtotal\" readOnly=\"true\" value={\"$\" + subtotal.toFixed(2)}/></p>\n        <p><label>GST: </label><input type=\"text\" name=\"tGST\" id=\"tGST\" readOnly=\"true\" value={\"$\" + totalGst.toFixed(2)}/></p>\n        <p><label>PST: </label><input type=\"text\" name=\"tPST\" id=\"tPST\" readOnly=\"true\" value={\"$\" + totalPst.toFixed(2)}/></p>\n        <p><label>Grand Total: </label><input type=\"text\" name=\"tTotal\" id=\"tTtoal\" readOnly=\"true\" value={\"$\" + total.toFixed(2)}/></p>\n      </form>\n    </div>\n  );\n}\n\n\n\n//Code for the 'Menu' page and what will appear on it. This has a list of the menu with prices. \nfunction Menu() {\n  return (\n    <div className=\"header\">\n      <nav>\n        <Link to=\"/\">Home</Link>&nbsp;|&nbsp;<Link to=\"/menu\">Menu</Link>&nbsp;|&nbsp;\n        <Link to=\"/about\">About</Link>&nbsp;|&nbsp;<Link to=\"/contact\">Contact</Link>\n      </nav>\n\n      <h2 className=\"pageTitle\"><span className=\"firstLetter\">M</span>enu</h2>\n\n      <h3 className=\"menuDesc\"><span className=\"firstLetter\">N</span>ote: All Pizzas come with\n      our made from scratch tomato sauce and mozzerella cheese.</h3>\n\n      {/*List for size options*/}\n      <h3 className=\"menuTitle\"><span className=\"firstLetter\">S</span>ize</h3>\n      <p className=\"menuDesc\"><span className=\"firstLetter\">W</span>e have a variety of pizzas sizes, from feeding 1 person to feeding a who group!</p>\n      <ul>\n        <li>Small - 9\" ..... ($7.00)</li>\n        <li>Medium - 12\" ..... ($9.00)</li>\n        <li>Large - 15\" ..... ($11.00)</li>\n        <li>Extra Large - 18\" ..... ($13.00)</li>\n      </ul>\n\n      {/*List for dough options*/}\n      <h3 className=\"menuTitle\"><span className=\"firstLetter\">D</span>ough Types</h3>\n      <p className=\"menuDesc\"><span className=\"firstLetter\">O</span>ur dough is made right here, hot and fresh, just for you!</p>\n      <ul>\n        <li>Original</li>\n        <li>Whole Wheat</li>\n        <li>Rye</li>\n        <li>Gluten Free ...... $1.00 Extra</li>\n      </ul>\n\n      {/* The looooong lsit of toppings */}\n      <h3 className=\"menuTitle\"><span className=\"firstLetter\">T</span>oppings</h3>\n      <p className=\"menuDesc\"><span className=\"firstLetter\">H</span>eaps of tasty toppings to choose from to customize your\n      perfect dream pizza! All toppings are an extra $0.50 each.</p>\n\n      <ul className=\"toppings\">\n        <li>Pepperoni</li>\n        <li>Extra Mozzerella Cheese</li>\n        <li>Cheddar Cheese</li>\n        <li>Feta Cheese</li>\n        <li>Onions</li>\n        <li>Sausage</li>\n        <li>Ground Beef</li>\n        <li>Bacon</li>\n        <li>Peppers</li>\n        <li>Mushrooms</li>\n        <li>Olives</li>\n        <li>Pineapple</li>\n        <li>Ham</li>\n        <li>Chicken</li>\n        <li>Basil</li>\n        <li>Kale</li>\n        <li>Anchovies</li>\n        <li>Tomatoes</li>\n      </ul>\n    </div>\n  );\n}\n\n//Code for the 'About' page and what will appear on it\nfunction About() {\n  return (\n    <div className=\"header\">\n      <nav>\n        <Link to=\"/\">Home</Link>&nbsp;|&nbsp;<Link to=\"/menu\">Menu</Link>&nbsp;|&nbsp;\n        <Link to=\"/about\">About</Link>&nbsp;|&nbsp;<Link to=\"/contact\">Contact</Link> \n      </nav>\n\n      <h2 className=\"pageTitle\"><span className=\"firstLetter\">A</span>bout</h2>\n    </div>\n  );\n}\n\n//Code for the 'Contact' page and what will appear on it\nfunction Contact() {\n  return (\n    <div className=\"header\">\n      <nav>\n        <Link to=\"/\">Home</Link>&nbsp;|&nbsp;<Link to=\"/menu\">Menu</Link>&nbsp;|&nbsp;\n        <Link to=\"/about\">About</Link>&nbsp;|&nbsp;<Link to=\"/contact\">Contact</Link> \n      </nav>\n\n      <h2 className=\"pageTitle\"><span className=\"firstLetter\">C</span>ontact Us</h2>\n\n      <div className=\"contactInfo\">\n        <p><span className=\"symbol\">&#9742;</span> - Phone: (306) 123-4567</p>\n        <p><span className=\"symbol\">&#9993;</span> - Email: pp-pizzaplace-questions@mail.com</p>\n        <p><span className=\"symbol\">&#127968;</span> - Address: 123 Fake St. Saskatoon, SK</p>\n      </div>\n    </div>\n  );\n}\n\n//Code for an error page and what will appear on it. This appears if an invalid link is entered\nfunction Error404() {\n  return (\n    <div className=\"errorDiv\">\n      <h2 className=\"error\"> Oh no! - 404 Error</h2>\n      <h3 className=\"error\">File or directory not found or doesn't exist!</h3>\n      <h3 className=\"error\">Something seems to have gone wrong. <Link to=\"/\" className=\"errorLink\">Click here</Link> to\n      return back to the main page!</h3>\n    </div>\n  )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}